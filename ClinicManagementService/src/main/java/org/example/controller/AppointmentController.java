package org.example.controller;

import org.example.model.AppointmentModel;
import org.example.util.AppointmentDML;

import java.sql.Time;
import java.util.Date;

public class AppointmentController {

    /**
     * Schedule a new appointment for a patient.
     * @param doctorId the ID of the doctor
     * @param patientId the ID of the patient
     * @param appointmentDate the date of the appointment
     * @param appointmentTime the time of the appointment
     */
    public void scheduleAppointment(int doctorId, int patientId, Date appointmentDate, Time appointmentTime) {
        AppointmentModel newAppointment = new AppointmentModel(
                0, // new appointment, so ID will be auto-generated by DB
                appointmentDate,
                appointmentTime,
                doctorId,
                patientId
        );
        AppointmentDML.addAppointment(newAppointment);
        System.out.println("Appointment scheduled successfully for patient " + patientId);
    }

    /**
     * Reschedule an existing appointment.
     * @param appointmentId the ID of the appointment to reschedule
     * @param newAppointmentDate the new date of the appointment
     * @param newAppointmentTime the new time of the appointment
     */
    public void rescheduleAppointment(int appointmentId, Date newAppointmentDate, Time newAppointmentTime) {
        AppointmentModel existingAppointment = AppointmentDML.getAppointmentById(appointmentId);

        if (existingAppointment != null) {
            existingAppointment.setAppointmentDate(newAppointmentDate);
            existingAppointment.setAppointmentTime(newAppointmentTime);
            AppointmentDML.updateAppointment(existingAppointment);
            System.out.println("Appointment rescheduled successfully.");
        } else {
            System.out.println("Appointment not found.");
        }
    }

    /**
     * Cancel an existing appointment.
     * @param appointmentId the ID of the appointment to cancel
     */
    public void cancelAppointment(int appointmentId) {
        AppointmentModel existingAppointment = AppointmentDML.getAppointmentById(appointmentId);

        if (existingAppointment != null) {
            AppointmentDML.deleteAppointment(appointmentId);
            System.out.println("Appointment canceled successfully.");
        } else {
            System.out.println("Appointment not found.");
        }
    }

    /**
     * View an appointment by its ID.
     * @param appointmentId the ID of the appointment to view
     */
    public void viewAppointment(int appointmentId) {
        AppointmentModel appointment = AppointmentDML.getAppointmentById(appointmentId);
        if (appointment != null) {
            System.out.println("Appointment Details: " + appointment);
        } else {
            System.out.println("Appointment not found.");
        }
    }

    /**
     * View all appointments for a given doctor.
     * @param doctorId the ID of the doctor
     */
    public void viewAppointmentsByDoctor(int doctorId) {
        System.out.println("Appointments for Doctor ID: " + doctorId);
        AppointmentDML.getAllAppointments(doctorId).forEach(System.out::println);
    }
}
